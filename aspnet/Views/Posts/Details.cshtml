@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer

@model aspnet.ViewModel.PostDetailsViewModel
@{
    ViewData["Title"] = Localizer["details"];
}

@if (Model.IsAdmin)
{

    <form asp-action="Delete" asp-controller="Posts" method="post" asp-route-id="@Model.Id">
        <a style="margin:10px" class="btn btn-sm btn-default" asp-action="Edit" asp-route-id="@Model.Id">@Localizer["edit"]</a>
        <button type="submit" class="btn btn-sm">
            @Localizer["delete"]
        </button>
    </form>
}

<div class="article-clean">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-xl-8 offset-lg-1 offset-xl-2">
                <div class="intro">
                    <h1 class="text-center"><markdown content="@Model.Title" /></h1>
                    <p class="text-center" style="font-size:20px"><span class="by">@Localizer["author"]:</span> <a href="#">@Model.User.UserName</a> | <span class="date"> @Model.Time.ToString()</span></p>
                </div>
                <div class="center-block" style="margin: 0 auto; background: gray; padding: 10px; border: 2px gray; border-radius: 10px;">
                    <markdown content="@Model.Text" />
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js"></script>

<hr />

<h2>
    @Localizer["comments"]
</h2>
@if (User.Identity.IsAuthenticated)
{
    <input hidden name="UserName" id="UserName" type="text" value="@User.Identity.Name">
    <input hidden value="@Model.Id" name="id" id="id">
    <hr />
    <textarea style="margin:10px" placeholder="@Localizer["comment_content"]"
              class="form-control" id="commentInput" name="commentInput" rows="3"></textarea>

    <div class="form-group">
        <input type="submit" value="@Localizer["add"]" class="btn btn-success" id="sendButton" name="sendButton" />
    </div>
}

<hr />

<div id="comments-container-id">
    @if (Model.Comments != null)
    {
        @foreach (var comment in Model.Comments)
        {
            <div style="margin:10px; padding:0px" id="@comment.Id">
                <div style="display:flex">
                    <div style="margin-right:auto; font-size:12px">
                        <span>@Localizer["author"]: <a href="#">@comment.User.UserName</a></span>
                        <span> @comment.CreationTime.ToString()</span>
                    </div>

                    @if (User.Identity.IsAuthenticated && (Model.IsAdmin || Model.CurrentUser == comment.User))
                    {
                        <div>
                            <a class="btn btn-sm btn-default" asp-action="EditComment" asp-route-id="@comment.Id">@Localizer["edit_comment"]</a>
                            <button type="submit" class="btn btn-sm" onclick="deleteComment(@comment.Id)">
                                @Localizer["delete_comment"]
                            </button>
                        </div>
                    }

                </div>


                <div style="margin-left:20px">
                    <markdown content="@comment.Text" />
                </div>
                <hr />
            </div>

        }
    }
</div>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript">
    var connection = new signalR.HubConnectionBuilder().withUrl("/commentshub").build();

    updateMessages = (id, userName, commentText, creationTime) => {
        const container = $('#comments-container-id');
        var currUserName = document.getElementById("UserName").value;
        var top = `<div style="margin:10px; padding:0px" id=${id}>
            <div style="display:flex">
                <div style="margin-right:auto; font-size:12px">
                    <span>@Localizer["author"] <a href="#">${userName}</a></span>
                    <span> ${creationTime}</span>
                </div>`;
        var bottom = `            </div>
            <div style="margin-left:20px">
                ${commentText}
            </div>
           <hr />
        </div>`;
        var buttons = `
        <div>
           <a class="btn btn-sm btn-default" href="/Posts/EditComment/${id}">@Localizer["edit_comment"]</a>
            <button type="submit" class="btn btn-sm" onclick="deleteComment(${id})">
                @Localizer["delete_comment"]
            </button>
        </div>
            `;

        var result = top;
        if (currUserName == userName) {
            result += buttons;
        }
        result += bottom;
        container.prepend(result);

        $('#commentInput').val('');
        container.scrollTop(container[0].scrollHeight);

    };

    deleteComment = (id) => {
        connection.invoke("DeleteComment", id).catch(function (err) {
            return console.error(err.toString);
        });
    }

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (id, user, message, date) {
        updateMessages(id, user, message, date);
    });

    connection.on("DeleteCommentFrom", function (id) {
        var element = document.getElementById(+id);
        var parent = element.parentElement;
        parent.removeChild(element);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("UserName").value;
        var message = document.getElementById("commentInput").value;
        var id = document.getElementById("id").value;
        connection.invoke("SendMessage", user, message, id).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

</script>