@model aspnet.ViewModel.DiscussViewModel
@{
    ViewData["Title"] = "Discuss";
}



<h2>@Model.Name</h2>

<h4>@Model.Description</h4>

<hr />

@if (Model.Messages != null)
{
<div id="message-container-id" style="max-height:350px; overflow-y:scroll">
    @foreach (var message in Model.Messages)
    {
        <div style="margin:10px; padding:0px">
            <div style="display:flex">
                <div style="margin-right:auto; font-size:12px">
                    <span>by <a href="#">@message.User.UserName</a></span>
                    <span> @message.CreationTime.ToString()</span>
                </div>

                @*@if (Model.IsAdmin || Model.CurrentUser == comment.User)
                {
                    <div>
                        <form asp-action="DeleteComment" asp-controller="Posts" method="post" asp-route-id="@comment.Id">
                            <a class="btn btn-sm btn-primary" asp-action="EditComment" asp-route-id="@comment.Id">Edit</a>
                            <button type="submit" class="btn btn-sm btn-danger">
                                Delete
                            </button>
                        </form>
                    </div>
                }*@

            </div>


            <div style="margin-left:20px">
                <markdown content="@message.Text" />
            </div>
        </div>

        <hr />
    }
</div>
}

@if (User.Identity.IsAuthenticated)
{
    <form asp-action="Discuss" asp-controller="Forum" method="post" asp-route-id="@Model.Id" asp-net>
        <input hidden name="UserName" id="UserName" type="text" value="@User.Identity.Name">
        <input hidden value="@Model.Id" name="id" id="id">
        <div class="row">
            <div class="col-6">
                <textarea style="margin:10px" placeholder="Your comment..."
                          class="form-control" rows="3" name="messageInput" id="messageInput"></textarea>


                <div class="form-group">
                    <input type="submit" value="Submit" name="sendButton" class="btn btn-success" id="sendButton" />
                </div>

            </div>
        </div>
    </form>
}

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript">
    var connection = new signalR.HubConnectionBuilder().withUrl("/kek").build();

    updateMessages = (userName, messageText, creationTime) => {
        const container = $('#message-container-id');
        container.append(`
            <div style="margin:10px; padding:0px">
            <div style="display:flex">
                <div style="margin-right:auto; font-size:12px">
                    <span>by <a href="#">${userName}</a></span>
                    <span> ${creationTime}</span>
                </div>

         

            </div>



            <div style="margin-left:20px">
                ${messageText}
            </div>
        </div>

            <hr />
        `);
        $('#messageInput').val('');
        container.scrollTop(container[0].scrollHeight);

    };

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message, date) {
        updateMessages(user, message, date);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("UserName").value;
        var message = document.getElementById("messageInput").value;
        var id = document.getElementById("id").value;
        connection.invoke("SendMessage", user, message, id).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });
</script>